[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ai-paywall"
version = "0.1.0"
description = "A universal Python module for charging AI crawlers while keeping content free for humans"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "James Fishwick", email = "james@jamesfishwick.com"},
]
keywords = ["ai", "crawlers", "paywall", "content", "protection", "web", "scraping"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Security",
]
dependencies = [
    "pyyaml>=5.1",
    "requests>=2.25.0",
]

[project.optional-dependencies]
redis = ["redis>=4.0.0"]
stripe = ["stripe>=5.0.0"]
django = ["django>=3.2"]
flask = ["flask>=2.0.0"]
fastapi = ["fastapi>=0.68.0"]
dev = [
    "pytest>=6.0",
    "pytest-cov>=3.0",
    "black>=22.0",
    "isort>=5.0",
    "flake8>=4.0",
    "mypy>=0.950",
    "pre-commit>=2.15",
]
all = [
    "redis>=4.0.0",
    "stripe>=5.0.0",
    "django>=3.2",
    "flask>=2.0.0",
    "fastapi>=0.68.0",
]

[project.urls]
Homepage = "https://github.com/jamesfishwick/ai-paywall"
Repository = "https://github.com/jamesfishwick/ai-paywall"
Documentation = "https://ai-paywall.readthedocs.io"
"Bug Tracker" = "https://github.com/jamesfishwick/ai-paywall/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["ai_paywall*"]

[tool.setuptools.package-data]
"ai_paywall" = ["*.yaml", "*.json"]

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["ai_paywall"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--strict-markers --strict-config --cov=ai_paywall"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["ai_paywall"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]